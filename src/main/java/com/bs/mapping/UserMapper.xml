<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bs.IDao.UserMapper" >
   <!-- 一个mapper文件对应一个dao，告诉他对应的dao在哪里 -->
  <resultMap id="BaseResultMap" type="com.bs.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userno" property="userno" jdbcType="VARCHAR" />
    <result column="truename" property="truename" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
    <association property="role" column="roleid" select="com.bs.IDao.RoleMapper.selectByPrimaryKey" javaType="com.bs.domain.Role"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, userno, truename, password, roleid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bs.domain.User" >
    insert into user (id, userno, truename, 
      password, roleid
      )
    values (#{id,jdbcType=INTEGER}, #{userno,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roleid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bs.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userno != null" >
        userno,
      </if>
      <if test="truename != null" >
        truename,
        
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userno != null" >
        #{userno,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bs.domain.User" >
    update user
    <set >
      <if test="userno != null" >
        userno = #{userno,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bs.domain.User" >
    update user
    set userno = #{userno,jdbcType=VARCHAR},
      truename = #{truename,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      roleid = #{roleid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <select id="selectByUserNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userno = #{userno,jdbcType=VARCHAR}
  </select>
  
  <select id="getUserCount" resultType="java.lang.Integer">
   	SELECT count(*) from user
  </select>
  
      <select id="getUserLists" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user order by id 
    limit #{pageIndex},#{pageSize}
  </select>
      <select id="getAllUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user order by id 
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bs.IDao.CommodityMapper" >
  <resultMap id="BaseResultMap" type="com.bs.domain.Commodity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="stockamount" property="stockamount" jdbcType="INTEGER" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="buy" property="buy" jdbcType="DOUBLE" />
    <result column="sell" property="sell" jdbcType="DOUBLE" />
    <result column="unitid" property="unitid" jdbcType="INTEGER" />
    <result column="categoryid" property="categoryid" jdbcType="INTEGER" />
    <result column="buyerid" property="buyerid" jdbcType="INTEGER" />
    <association property="unit" column="unitid" select="com.bs.IDao.UnitMapper.selectByPrimaryKey"></association>
    <association property="category" column="categoryid" select="com.bs.IDao.CategoryMapper.selectByPrimaryKey"></association>
    <association property="buyer" column="buyerid" select="com.bs.IDao.BuyerMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, stockamount, brand, buy, sell, unitid, categoryid, buyerid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from commodity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from commodity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bs.domain.Commodity" >
    insert into commodity (id, name, stockamount, 
      brand, buy, sell, unitid, 
      categoryid, buyerid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{stockamount,jdbcType=INTEGER}, 
      #{brand,jdbcType=VARCHAR}, #{buy,jdbcType=DOUBLE}, #{sell,jdbcType=DOUBLE}, #{unitid,jdbcType=INTEGER}, 
      #{categoryid,jdbcType=INTEGER}, #{buyerid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bs.domain.Commodity" >
    insert into commodity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="stockamount != null" >
        stockamount,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="buy != null" >
        buy,
      </if>
      <if test="sell != null" >
        sell,
      </if>
      <if test="unitid != null" >
        unitid,
      </if>
      <if test="categoryid != null" >
        categoryid,
      </if>
      <if test="buyerid != null" >
        buyerid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="stockamount != null" >
        #{stockamount,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="buy != null" >
        #{buy,jdbcType=DOUBLE},
      </if>
      <if test="sell != null" >
        #{sell,jdbcType=DOUBLE},
      </if>
      <if test="unitid != null" >
        #{unitid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null" >
        #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="buyerid != null" >
        #{buyerid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bs.domain.Commodity" >
    update commodity
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="stockamount != null" >
        stockamount = #{stockamount,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="buy != null" >
        buy = #{buy,jdbcType=DOUBLE},
      </if>
      <if test="sell != null" >
        sell = #{sell,jdbcType=DOUBLE},
      </if>
      <if test="unitid != null" >
        unitid = #{unitid,jdbcType=INTEGER},
      </if>
      <if test="categoryid != null" >
        categoryid = #{categoryid,jdbcType=INTEGER},
      </if>
      <if test="buyerid != null" >
        buyerid = #{buyerid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bs.domain.Commodity" >
    update commodity
    set name = #{name,jdbcType=VARCHAR},
      stockamount = #{stockamount,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      buy = #{buy,jdbcType=DOUBLE},
      sell = #{sell,jdbcType=DOUBLE},
      unitid = #{unitid,jdbcType=INTEGER},
      categoryid = #{categoryid,jdbcType=INTEGER},
      buyerid = #{buyerid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
     <select id="getCommodityList" resultMap="BaseResultMap" >
   select 
    <include refid="Base_Column_List" />
    from commodity
    limit #{pageIndex},#{pageSize}
  </select>
     <select id="getAllCommoditys" resultMap="BaseResultMap" >
   select 
    <include refid="Base_Column_List" />
    from commodity
  </select>
     <select id="getAllCommoditysByCategoryid" resultMap="BaseResultMap" >
   select 
    <include refid="Base_Column_List" />
    from commodity where categoryid = #{categoryid,jdbcType=INTEGER}
  </select>
   <select id="getCommodityCount" resultType="java.lang.Integer">
   	SELECT count(*) from commodity
  </select>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from commodity
    where name = #{name,jdbcType=VARCHAR}
  </select>
    <select id="getCommodityListForSearch" resultMap="BaseResultMap" parameterType="map" >
   select 
    <include refid="Base_Column_List" />
    from commodity
     <where>  
        <if test="commodityid!=null">  
            and id = #{commodityid}
        </if>  
        <if test="categoryid!=null">  
            and categoryid = #{categoryid}
        </if>
         <if test="min != null">
    		and stockamount <![CDATA[>=]]> #{min}
   		 </if>
	    <if test="max != null">
	    	and stockamount <![CDATA[<=]]> #{max}
	    </if>  
    </where>  
    limit ${pageIndex},${pageSize}
  </select>
   <select id="getCommodityCountForSearch" resultType="java.lang.Integer" parameterType="map">
   	SELECT count(*) from commodity
   	 <where>  
        <if test="commodityid!=null">  
            and id = #{commodityid}
        </if>  
        <if test="categoryid!=null">  
            and categoryid = #{categoryid}
        </if>
         <if test="min != null">
    		and stockamount <![CDATA[>=]]> #{min}
   		 </if>
	    <if test="max != null">
	    	and stockamount <![CDATA[<=]]> #{max}
	    </if>  
    </where>  
  </select>
</mapper>